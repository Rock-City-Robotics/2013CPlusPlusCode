// RobotBuilder Version: 0.0.2
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in th future.
#include "AutonomousCommand.h"
#include "../Robot.h"
AutonomousCommand::AutonomousCommand() {
	// Use requires() here to declare subsystem dependencies
	// eg. requires(chassis);
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
}
// Called just before this Command runs the first time
void AutonomousCommand::Initialize() {
	Robot::launcher->Start();
	Wait(1.0);
	Robot::fire->Forward();	
	Wait(.7);
	Robot::fire->Backward();
	Wait(.7);
	Robot::indexer->Start();
	Wait(0.8);
	Robot::indexer->Stop();
	Wait(2);
	Robot::fire->Forward();	
	Wait(.7);
	Robot::fire->Backward();
	Wait(.7);
	Robot::fire->Stop();
	Wait(2);
	Robot::indexer->Start();
	Wait(.8);
	Robot::indexer->Stop();
	Wait(2);
	Robot::fire->Forward();
	Wait(.7);
	Robot::fire->Backward();
	Wait(.7);
	Robot::fire->Stop();
	Wait(.25);
	Robot::indexer->Start();
	Wait(.8);
	Robot::indexer->Stop();
	Wait(2);
	Robot::fire->Forward();
	Wait(.7);
	Robot::fire->Backward();
	Wait(.7);
	Robot::fire->Stop();	
	Wait(2);
}
// Called repeatedly when this Command is scheduled to run
void AutonomousCommand::Execute() {
	
			
}
// Make this return true when this Command no longer needs to run execute()
bool AutonomousCommand::IsFinished() {
return false;
}
// Called once after isFinished returns true
void AutonomousCommand::End() {
	
}
// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void AutonomousCommand::Interrupted() {
}

